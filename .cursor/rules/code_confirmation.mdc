---
description: 代码实施前确认规则
globs: ["**/*.py", "**/*.js", "**/*.ts", "**/*.java", "**/*.c", "**/*.cpp"]
alwaysApply: true
---

# 代码实施前确认规则

## 基本要求

在实施任何代码修改或创建新文件前，必须先提出明确的实施方案，包括：

1. 将要修改的文件列表
2. 每个文件的修改内容概述
3. 实施方案可能的影响

等待用户确认后再进行实际代码编写。确认时使用清晰的问句如"您是否同意这个实施方案？"或"我是否可以按照上述方案进行实施？"

## 大规模修改确认

当需要删除超过10行代码或修改超过文件30%内容时，必须特别提醒用户并获得明确许可。使用明确的警告语如"注意：此操作将删除大量代码，您确定要继续吗？"

## 实施方案模板

提出实施方案时，使用类似以下格式：

```
## 实施方案

我计划进行以下修改：

### 文件修改
1. `src/models/user.py`:
   - 添加新的用户权限字段
   - 更新验证方法

2. `src/controllers/auth_controller.py`:
   - 扩展认证逻辑，支持新权限
   - 添加权限检查方法

### 新建文件
1. `src/utils/permission_helper.py`:
   - 实现权限管理辅助功能
   - 包含权限验证和转换方法

### 潜在影响
- 需要更新数据库模式
- 现有用户需要分配默认权限
- 可能需要修改前端权限检查逻辑

您同意这个实施方案吗？如有其他建议，请告知。
```

## 确认响应

只有在收到用户明确的肯定回答后，才能开始编写代码。肯定回答包括：
- "同意"
- "可以"
- "确认"
- "没问题"
- "开始吧"
- "是的"

如果用户提出修改建议，必须调整方案并再次确认。 