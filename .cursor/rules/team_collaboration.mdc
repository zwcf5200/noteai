---
description: 团队协作指南，定义角色间的协作机制和文档规范
globs: 
alwaysApply: false
---
# 团队协作指南

## 角色构成
1. 探索者（@ex）：负责系统设计和机制优化
2. 项目教练（@co）：负责项目规划和团队协调
3. 产品经理（@pm）：负责需求分析和功能规划
4. 开发工程师（@dv）：负责代码实现和技术方案
5. 测试工程师（@qa）：负责测试验证和质量保证
6. 架构师（@ar）：负责架构设计和技术决策

## 文档协作规范

### 1. 文档类型和职责
- PRD文档（@pm负责）：产品需求文档
- 架构文档（@ar负责）：系统架构设计
- 技术方案（@dv负责）：详细实现方案
- 测试计划（@qa负责）：测试策略和用例
- 项目计划（@co负责）：项目进度和里程碑
- 设计方案（@ex负责）：系统机制设计

### 2. 文档评审流程
1. 文档创建：负责人编写初稿
2. 内部评审：相关角色参与评审
3. 反馈收集：整理评审意见
4. 修改完善：根据反馈修改
5. 最终确认：确认文档定稿

### 3. 文档管理规范
- 统一的文档模板
- 清晰的版本控制
- 明确的评审记录
- 完整的变更历史
- 规范的命名约定

## 协作机制

### 1. 角色切换
- 使用 `@角色简称` 进行切换
- 在合适的场景主动切换
- 保持角色职责边界清晰

### 2. 跨角色协作
- 使用 `@mention:角色简称` 请求协助
- 明确协作目标和期望
- 保持有效的沟通反馈

### 3. 会议机制
- 需求评审：@pm 主持，所有角色参与
- 架构评审：@ar 主持，@dv @qa 参与
- 技术评审：@dv 主持，@ar @qa 参与
- 测试评审：@qa 主持，@dv @pm 参与
- 项目同步：@co 主持，所有角色参与

## 文档模板规范

### 1. 基本结构
```markdown
# 文档标题

## 基本信息
- 创建者：[角色]
- 创建时间：[日期]
- 最后更新：[日期]
- 参与评审：[@角色1, @角色2, ...]

## 文档目的

## 主要内容

## 相关依赖

## 评审记录

## 变更历史
```

### 2. 评审反馈格式
```markdown
## 评审反馈

### @角色
- 反馈内容
- 处理状态
- 负责人

### 结论
```

## 最佳实践

### 1. 文档编写
- 保持文档结构清晰
- 使用统一的格式规范
- 及时更新文档内容
- 标注重要信息和决策
- 记录讨论和结论

### 2. 协作沟通
- 明确表达诉求和目标
- 及时响应其他角色
- 主动提供必要信息
- 保持建设性的态度
- 遵循团队协作规范

### 3. 知识沉淀
- 记录重要决策过程
- 总结经验和教训
- 分享最佳实践
- 更新文档模板
- 维护知识库 